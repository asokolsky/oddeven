#include <iostream>
#include <map>
#include <string>


using namespace std;

/**
 * Слова называются анаграммами друг друга, если одно из них можно получить перестановкой букв в другом. 
 * Например, слово «eat» можно получить перестановкой букв слова «tea», поэтому эти слова являются анаграммами друг друга. 
 * Даны пары слов, проверьте для каждой из них, являются ли слова этой пары анаграммами друг друга.
 * 
 * Указание
 * Один из способов проверки того, являются ли слова анаграммами друг друга, заключается в следующем. 
 * Для каждого слова с помощью словаря подсчитаем, сколько раз в нём встречается каждая буква. 
 * Если для обоих слов эти словари равны (а это проверяется с помощью обычного оператора ==), 
 * то слова являются анаграммами друг друга, в противном случае не являются.
 * 
 * При этом построение такого словаря по слову удобно вынести в отдельную функцию BuildCharCounters.
 * 
 */

map <char, int> BuildCharCounters(const string &word)
{
  map <char, int> dict;
  for(auto ch : word)
    ++dict[ch];
  return dict;  
}

int main()
{
  int ops;
  cin >> ops;
  for(int i = 0; i < ops; ++i)
  {
    string w1;
    string w2;
    cin >> w1 >> w2;
    map <char, int> d1 = BuildCharCounters(w1);
    map <char, int> d2 = BuildCharCounters(w2);
    cout << ((d1 == d2) ? "YES" : "NO") << endl;

  }
  return 0;
}
